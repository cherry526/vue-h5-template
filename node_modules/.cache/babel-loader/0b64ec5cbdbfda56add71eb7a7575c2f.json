{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\src\\components\\common\\common\\commonList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\src\\components\\common\\common\\commonList.vue","mtime":1596624611092},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiQzovVXNlcnMvQWRtaW5pc3RyYXRvci9EZXNrdG9wL3ZpcF9pbmxpbmVfaDUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvQWRtaW5pc3RyYXRvci9EZXNrdG9wL3ZpcF9pbmxpbmVfaDUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2NvbW1vbkxpc3QnLAogIHByb3BzOiB7CiAgICBiZWZvcmVTZXRMaXN0OiB7CiAgICAgIC8vIOi1i+WAvGxpc3TmlbDmja7kuYvliY0KICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KGxpc3QpIHsKICAgICAgICByZXR1cm4gbGlzdDsKICAgICAgfQogICAgfSwKICAgIGJlZm9yZVJlcXVlc3Q6IHsKICAgICAgLy8g6K+35rGCbGlzdOaVsOaNruS5i+WJjQogICAgICB0eXBlOiBGdW5jdGlvbiwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9LAogICAgcGFnZU5hbWU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAncGFnZScKICAgIH0sCiAgICBsaXN0TmFtZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdhY3RMaXN0JwogICAgfSwKICAgIGFwaU5hbWU6IHsKICAgICAgLy8g6K+35rGC5o6l5Y+j5ZCN56ewCiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgZmlsdGVyRGF0YTogewogICAgICAvLyDor7fmsYLmlbDmja4KICAgICAgdHlwZTogT2JqZWN0CiAgICB9LAogICAgbGlzdDogewogICAgICAvLyDliJfooajmlbDmja4KICAgICAgdHlwZTogQXJyYXkKICAgIH0sCiAgICByZWZyZXNoOiB7CiAgICAgIC8vIOmHjee9ruWIl+ihqAogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGRyb3BEb3duOiB7CiAgICAgIC8vIOaYr+WQpuW8gOWQr+S4iuaLieWIt+aWsAogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIC8vIOWIt+aWsOWIl+ihqAogICAgcmVmcmVzaDogZnVuY3Rpb24gcmVmcmVzaChuZXdWYWwsIG9sZFZhbCkgewogICAgICBjb25zb2xlLmxvZyh0aGlzLnJlZnJlc2gsIG5ld1ZhbCwgJ3JlZnJlc2gnKTsKCiAgICAgIGlmIChuZXdWYWwpIHsKICAgICAgICB0aGlzLnBhZ2UgPSAxOwogICAgICAgIHRoaXMuZmluaXNoZWQgPSBmYWxzZTsKICAgICAgICB0aGlzLmdldExpc3QoKTsKICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6cmVmcmVzaCcsIGZhbHNlKTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBmaW5pc2hlZDogZmFsc2UsCiAgICAgIHJlZnJlc2hpbmc6IGZhbHNlLAogICAgICBwYWdlOiAxLAogICAgICBkYXRhTGlzdDogW10sCiAgICAgIGxpc3RMb2FkaW5nOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uUmVmcmVzaDogZnVuY3Rpb24gb25SZWZyZXNoKCkgewogICAgICAvLyDmuIXnqbrliJfooajmlbDmja4KICAgICAgdGhpcy5maW5pc2hlZCA9IGZhbHNlOyAvLyDph43mlrDliqDovb3mlbDmja4KICAgICAgLy8g5bCGIGxvYWRpbmcg6K6+572u5Li6IHRydWXvvIzooajnpLrlpITkuo7liqDovb3nirbmgIEKCiAgICAgIHRoaXMucGFnZSA9IDE7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZTsKICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgLy8g5aSE55CG6K+35rGC5pWw5o2uCiAgICBoYW5kZWxMaXN0OiBmdW5jdGlvbiBoYW5kZWxMaXN0KCkge30sCiAgICAvLyDor7fmsYLliJfooajmlbDmja4KICAgIGdldExpc3Q6IGZ1bmN0aW9uIGdldExpc3QoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgZGF0YSwgZXh0cmE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmIChfdGhpcy5yZWZyZXNoaW5nKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLmRhdGFMaXN0ID0gW107CiAgICAgICAgICAgICAgICAgIF90aGlzLnJlZnJlc2hpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgX3RoaXMubGlzdExvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShfdGhpcy5maWx0ZXJEYXRhKSk7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuYmVmb3JlUmVxdWVzdChkYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgZXh0cmEgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIC8vIOivt+axguS5i+WJjQogICAgICAgICAgICAgICAgZGF0YSA9IE9iamVjdC5hc3NpZ24oe30sIGRhdGEsIGV4dHJhKTsKICAgICAgICAgICAgICAgIGRhdGEucGFnZSA9IF90aGlzLnBhZ2U7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLCAnZGF0YScpOwoKICAgICAgICAgICAgICAgIF90aGlzLiRhcGlbX3RoaXMuYXBpTmFtZV0oZGF0YSkudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUocmVzKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGxpc3QsIHBhZ2VJbmZvOwogICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcmVzIHx8ICFyZXMuc3RhdGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuZmluaXNoZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcmVzLnN0YXRlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdCA9IHJlcy5pbmZvW190aGlzLmxpc3ROYW1lXSB8fCBbXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2VJbmZvID0gcmVzLmluZm9bX3RoaXMucGFnZU5hbWVdIHx8IHt9OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuYmVmb3JlU2V0TGlzdChsaXN0KTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdCA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzLnBhZ2UgPT0gMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy50b3RhbFBhZ2UgPSBwYWdlSW5mby50b3RhbFBhZ2UgfHwgMTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMubGlzdExvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdCA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoX3RoaXMuZGF0YUxpc3QpLCBfdG9Db25zdW1hYmxlQXJyYXkobGlzdCkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChfdGhpcy5wYWdlID49IF90aGlzLnRvdGFsUGFnZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5maW5pc2hlZCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuZGF0YUxpc3QgPSBsaXN0OyAvLyBjb25zb2xlLmxvZyhsaXN0LCAnbGlzdCcpCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuJGVtaXQoJ3VwZGF0ZTpsaXN0JywgbGlzdCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuJGVtaXQoJ2NoYW5nZScsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFnZTogX3RoaXMucGFnZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxQYWdlOiBfdGhpcy50b3RhbFBhZ2UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbmlzaGVkOiBfdGhpcy5maW5pc2hlZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMucGFnZSsrOwoKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgfSgpKS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5sb2FkaW5nLCAn6K+35rGC57uT5p2fJykKICAgICAgICAgICAgICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0TGlzdCgpOwogIH0KfTs="},{"version":3,"sources":["commonList.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\n * @Description: \r\n * @Version: 1.0\r\n * @Autor: yesong\r\n * @Date: 2020-07-29 14:11:44\r\n * @LastEditors: cherry\r\n * @LastEditTime: 2020-08-05 17:54:27\r\n--> \r\n<template>\r\n  <div class=\"common-list\">\r\n    <!-- 开启下拉刷新 -->\r\n    <van-pull-refresh :disabled=\"!dropDown\" v-model=\"refreshing\" @refresh=\"onRefresh\">\r\n      <van-list\r\n        class=\"act-list\"\r\n        v-model=\"loading\"\r\n        :finished=\"finished\"\r\n        :finished-text=\"dataList.length === 0 ? '' : '已经到底了~'\"\r\n        @load=\"getList\"\r\n        :immediate-check=\"false\"\r\n      >\r\n        <slot v-bind:list=\"dataList\" />\r\n        <div v-if=\"dataList.length === 0 && listLoading\" class=\"tac empty-data\">\r\n          <img src=\"http://doyd.oss-cn-shenzhen.aliyuncs.com/vip_mini_apply/empty_state.png\" alt=\"\">\r\n          <div>暂无数据</div>\r\n        </div>\r\n      </van-list>\r\n    </van-pull-refresh>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'commonList',\r\n  props: {\r\n    beforeSetList: { // 赋值list数据之前\r\n      type: Function,\r\n      default: (list) => {\r\n        return list\r\n      }\r\n    },\r\n    beforeRequest: { // 请求list数据之前\r\n      type: Function,\r\n      default: () => {\r\n        return {}\r\n      }\r\n    },\r\n    pageName: {\r\n      type: String,\r\n      default: 'page',\r\n    },\r\n    listName: {\r\n      type: String,\r\n      default: 'actList',\r\n    },\r\n    apiName: { // 请求接口名称\r\n      type: String,\r\n      default: '',\r\n      required: true\r\n    },\r\n    filterData: { // 请求数据\r\n      type: Object\r\n    },\r\n    list: { // 列表数据\r\n      type: Array\r\n    },\r\n    refresh: { // 重置列表\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    dropDown: { // 是否开启上拉刷新\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  watch: {\r\n    // 刷新列表\r\n    refresh(newVal, oldVal) {\r\n      console.log(this.refresh, newVal, 'refresh')\r\n      if (newVal) {\r\n        this.page = 1\r\n        this.finished = false\r\n        this.getList()\r\n        this.$emit('update:refresh', false)\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      loading: false,\r\n      finished: false,\r\n      refreshing: false,\r\n      page: 1,\r\n      dataList: [],\r\n      listLoading: false\r\n    }\r\n  },\r\n  methods: {\r\n    onRefresh() {\r\n      // 清空列表数据\r\n      this.finished = false;\r\n\r\n      // 重新加载数据\r\n      // 将 loading 设置为 true，表示处于加载状态\r\n      this.page = 1\r\n      this.loading = true;\r\n      this.listLoading = false\r\n      this.getList();\r\n    },\r\n\r\n    // 处理请求数据\r\n    handelList() {\r\n      \r\n    },\r\n\r\n    // 请求列表数据\r\n    async getList() {\r\n      if (this.refreshing) {\r\n        this.dataList = [];\r\n        this.refreshing = false;\r\n        this.listLoading = false\r\n      }\r\n      let data = JSON.parse(JSON.stringify(this.filterData))\r\n      let extra =  await this.beforeRequest(data) // 请求之前\r\n      data = Object.assign({}, data, extra)\r\n      data.page = this.page\r\n      console.log(data, 'data')\r\n      this.$api[this.apiName](data).then(async res=> {\r\n        if(!res || !res.state) {\r\n          this.finished = true\r\n        }\r\n        if (res.state) {\r\n          let list = res.info[this.listName] || []\r\n          let pageInfo = res.info[this.pageName] || {}\r\n          list = await this.beforeSetList(list)\r\n          if (this.page == 1) {\r\n            this.totalPage = pageInfo.totalPage || 1\r\n            this.listLoading = true\r\n          } else {\r\n            list = [...this.dataList, ...list]\r\n          }\r\n          if (this.page >= this.totalPage) {\r\n            this.finished = true\r\n          }\r\n          this.dataList = list\r\n          // console.log(list, 'list')\r\n          this.$emit('update:list', list)\r\n          this.$emit('change', {\r\n            page: this.page,\r\n            totalPage: this.totalPage,\r\n            finished: this.finished\r\n          })\r\n          this.page++\r\n        }\r\n      }).finally(() => {\r\n        // console.log(this.loading, '请求结束')\r\n        this.loading = false\r\n      })\r\n    },\r\n  },\r\n  created () {\r\n    this.getList();\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.empty-data {\r\n  img {\r\n    width: 469px;\r\n    height: 349px;\r\n    margin: 178px auto 40px; \r\n  }\r\n  div {\r\n    font-size: 28px;\r\n    color: #8C8E99;\r\n  }\r\n}\r\n</style>\r\n\r\n\r\n"],"sourceRoot":"src/components/common/common"}]}