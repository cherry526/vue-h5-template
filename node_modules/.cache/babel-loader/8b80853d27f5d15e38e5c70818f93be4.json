{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\src\\views\\order\\orderList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\src\\views\\order\\orderList.vue","mtime":1596627053495},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}