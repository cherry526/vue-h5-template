{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\src\\components\\common\\common\\commonList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\src\\components\\common\\common\\commonList.vue","mtime":1597889072402},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["commonList.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\n * @Description: \r\n * @Version: 1.0\r\n * @Autor: yesong\r\n * @Date: 2020-07-29 14:11:44\r\n * @LastEditors: yesong\r\n * @LastEditTime: 2020-08-08 11:53:39\r\n--> \r\n<template>\r\n  <div class=\"common-list\">\r\n    <!-- 开启下拉刷新 -->\r\n    <van-pull-refresh :disabled=\"!dropDown\" v-model=\"refreshing\" @refresh=\"onRefresh\">\r\n      <van-list\r\n        class=\"act-list\"\r\n        v-model=\"loading\"\r\n        :finished=\"finished\"\r\n        :finished-text=\"dataList.length === 0 ? '' : '已经到底了~'\"\r\n        @load=\"getList()\"\r\n        :immediate-check=\"false\"\r\n      >\r\n        <slot v-bind:list=\"dataList\" />\r\n        <div v-if=\"dataList.length === 0 && listLoading\" class=\"tac empty-data\">\r\n          <img src=\"http://doyd.oss-cn-shenzhen.aliyuncs.com/vip_mini_apply/empty_state.png\" alt=\"\">\r\n          <div>暂无数据</div>\r\n        </div>\r\n      </van-list>\r\n    </van-pull-refresh>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'commonList',\r\n  props: {\r\n    beforeSetList: { // 赋值list数据之前\r\n      type: Function,\r\n      default: (list) => {\r\n        return list\r\n      }\r\n    },\r\n    beforeRequest: { // 请求list数据之前\r\n      type: Function,\r\n      default: () => {\r\n        return {}\r\n      }\r\n    },\r\n    auto: { // 列表是否启动页面自执行\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    pageName: {\r\n      type: String,\r\n      default: 'page',\r\n    },\r\n    listName: {\r\n      type: String,\r\n      default: 'actList',\r\n    },\r\n    apiName: { // 请求接口名称\r\n      type: String,\r\n      default: '',\r\n      required: true\r\n    },\r\n    filterData: { // 请求数据\r\n      type: Object\r\n    },\r\n    list: { // 列表数据\r\n      type: Array\r\n    },\r\n    refresh: { // 重置列表\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    dropDown: { // 是否开启上拉刷新\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  watch: {\r\n    // 刷新列表\r\n    refresh(newVal, oldVal) {\r\n      if (newVal) {\r\n      console.log(this.refresh, newVal, 'refresh执行')\r\n        this.page = 1\r\n        this.loading = true;\r\n        this.getList()\r\n        this.$emit('update:refresh', false)\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      loading: false,\r\n      finished: false,\r\n      refreshing: false,\r\n      page: 1,\r\n      dataList: [],\r\n      listLoading: false\r\n    }\r\n  },\r\n  methods: {\r\n    onRefresh() {\r\n      console.log('onRefresh执行')\r\n\r\n      // 重新加载数据\r\n      // 将 loading 设置为 true，表示处于加载状态\r\n      this.page = 1\r\n      this.loading = true;\r\n      this.listLoading = false\r\n      this.getList();\r\n    },\r\n\r\n    // 处理请求数据\r\n    handelList() {\r\n      \r\n    },\r\n\r\n    // 请求列表数据\r\n    async getList(event) {\r\n      this.apiLoad = false\r\n      if(this.apiLoad) return false\r\n      if (this.refreshing) {\r\n        this.dataList = [];\r\n        this.refreshing = false;\r\n        this.listLoading = false\r\n      }\r\n      \r\n      let data = JSON.parse(JSON.stringify(this.filterData))\r\n      let extra =  await this.beforeRequest(data) // 请求之前\r\n      data = Object.assign({}, data, extra)\r\n      data.page = this.page\r\n      // console.log(data, 'data')\r\n      \r\n      this.$api[this.apiName](data).then(async res=> {\r\n        this.apiLoad = true\r\n        if(!res || !res.state) {\r\n          this.finished = true\r\n        }\r\n        if (res.state) {\r\n          let list = res.info[this.listName] || []\r\n          let pageInfo = res.info[this.pageName] || {}\r\n          list = await this.beforeSetList(list)\r\n          if (this.page == 1) {\r\n            this.totalPage = pageInfo.totalPage || 1\r\n            this.listLoading = true\r\n            this.finished = false\r\n          } else {\r\n            list = [...this.dataList, ...list]\r\n          }\r\n          if (this.page >= this.totalPage) {\r\n            this.finished = true\r\n          }\r\n          this.dataList = list\r\n          this.$emit('update:list', list)\r\n          this.$emit('change', {\r\n            page: this.page,\r\n            totalPage: this.totalPage,\r\n            finished: this.finished\r\n          })\r\n          this.page++\r\n        }\r\n      }).finally(() => {\r\n        this.loading = false\r\n      })\r\n    },\r\n  },\r\n  created () {\r\n    this.auto && this.getList();\r\n    this.loading = true\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.empty-data {\r\n  img {\r\n    width: 469px;\r\n    height: 349px;\r\n    margin: 178px auto 40px; \r\n  }\r\n  div {\r\n    font-size: 28px;\r\n    color: #8C8E99;\r\n  }\r\n}\r\n</style>\r\n\r\n\r\n"],"sourceRoot":"src/components/common/common"}]}