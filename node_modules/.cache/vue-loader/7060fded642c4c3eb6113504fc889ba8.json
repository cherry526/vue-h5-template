{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\src\\components\\common\\common\\commonList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\src\\components\\common\\common\\commonList.vue","mtime":1596867753269},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdjb21tb25MaXN0JywNCiAgcHJvcHM6IHsNCiAgICBiZWZvcmVTZXRMaXN0OiB7IC8vIOi1i+WAvGxpc3TmlbDmja7kuYvliY0NCiAgICAgIHR5cGU6IEZ1bmN0aW9uLA0KICAgICAgZGVmYXVsdDogKGxpc3QpID0+IHsNCiAgICAgICAgcmV0dXJuIGxpc3QNCiAgICAgIH0NCiAgICB9LA0KICAgIGJlZm9yZVJlcXVlc3Q6IHsgLy8g6K+35rGCbGlzdOaVsOaNruS5i+WJjQ0KICAgICAgdHlwZTogRnVuY3Rpb24sDQogICAgICBkZWZhdWx0OiAoKSA9PiB7DQogICAgICAgIHJldHVybiB7fQ0KICAgICAgfQ0KICAgIH0sDQogICAgYXV0bzogeyAvLyDliJfooajmmK/lkKblkK/liqjpobXpnaLoh6rmiafooYwNCiAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICBkZWZhdWx0OiB0cnVlDQogICAgfSwNCiAgICBwYWdlTmFtZTogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgZGVmYXVsdDogJ3BhZ2UnLA0KICAgIH0sDQogICAgbGlzdE5hbWU6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIGRlZmF1bHQ6ICdhY3RMaXN0JywNCiAgICB9LA0KICAgIGFwaU5hbWU6IHsgLy8g6K+35rGC5o6l5Y+j5ZCN56ewDQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICBkZWZhdWx0OiAnJywNCiAgICAgIHJlcXVpcmVkOiB0cnVlDQogICAgfSwNCiAgICBmaWx0ZXJEYXRhOiB7IC8vIOivt+axguaVsOaNrg0KICAgICAgdHlwZTogT2JqZWN0DQogICAgfSwNCiAgICBsaXN0OiB7IC8vIOWIl+ihqOaVsOaNrg0KICAgICAgdHlwZTogQXJyYXkNCiAgICB9LA0KICAgIHJlZnJlc2g6IHsgLy8g6YeN572u5YiX6KGoDQogICAgICB0eXBlOiBCb29sZWFuLA0KICAgICAgZGVmYXVsdDogZmFsc2UNCiAgICB9LA0KICAgIGRyb3BEb3duOiB7IC8vIOaYr+WQpuW8gOWQr+S4iuaLieWIt+aWsA0KICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgIGRlZmF1bHQ6IGZhbHNlDQogICAgfQ0KICB9LA0KICB3YXRjaDogew0KICAgIC8vIOWIt+aWsOWIl+ihqA0KICAgIHJlZnJlc2gobmV3VmFsLCBvbGRWYWwpIHsNCiAgICAgIGlmIChuZXdWYWwpIHsNCiAgICAgIGNvbnNvbGUubG9nKHRoaXMucmVmcmVzaCwgbmV3VmFsLCAncmVmcmVzaOaJp+ihjCcpDQogICAgICAgIHRoaXMucGFnZSA9IDENCiAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsNCiAgICAgICAgdGhpcy5nZXRMaXN0KCkNCiAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnJlZnJlc2gnLCBmYWxzZSkNCiAgICAgIH0NCiAgICB9DQogIH0sDQogIGRhdGEgKCkgew0KICAgIHJldHVybiB7DQogICAgICBsb2FkaW5nOiBmYWxzZSwNCiAgICAgIGZpbmlzaGVkOiBmYWxzZSwNCiAgICAgIHJlZnJlc2hpbmc6IGZhbHNlLA0KICAgICAgcGFnZTogMSwNCiAgICAgIGRhdGFMaXN0OiBbXSwNCiAgICAgIGxpc3RMb2FkaW5nOiBmYWxzZQ0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIG9uUmVmcmVzaCgpIHsNCiAgICAgIGNvbnNvbGUubG9nKCdvblJlZnJlc2jmiafooYwnKQ0KDQogICAgICAvLyDph43mlrDliqDovb3mlbDmja4NCiAgICAgIC8vIOWwhiBsb2FkaW5nIOiuvue9ruS4uiB0cnVl77yM6KGo56S65aSE5LqO5Yqg6L2954q25oCBDQogICAgICB0aGlzLnBhZ2UgPSAxDQogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOw0KICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlDQogICAgICB0aGlzLmdldExpc3QoKTsNCiAgICB9LA0KDQogICAgLy8g5aSE55CG6K+35rGC5pWw5o2uDQogICAgaGFuZGVsTGlzdCgpIHsNCiAgICAgIA0KICAgIH0sDQoNCiAgICAvLyDor7fmsYLliJfooajmlbDmja4NCiAgICBhc3luYyBnZXRMaXN0KGV2ZW50KSB7DQogICAgICB0aGlzLmFwaUxvYWQgPSBmYWxzZQ0KICAgICAgaWYodGhpcy5hcGlMb2FkKSByZXR1cm4gZmFsc2UNCiAgICAgIGlmICh0aGlzLnJlZnJlc2hpbmcpIHsNCiAgICAgICAgdGhpcy5kYXRhTGlzdCA9IFtdOw0KICAgICAgICB0aGlzLnJlZnJlc2hpbmcgPSBmYWxzZTsNCiAgICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlDQogICAgICB9DQogICAgICANCiAgICAgIGxldCBkYXRhID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmZpbHRlckRhdGEpKQ0KICAgICAgbGV0IGV4dHJhID0gIGF3YWl0IHRoaXMuYmVmb3JlUmVxdWVzdChkYXRhKSAvLyDor7fmsYLkuYvliY0NCiAgICAgIGRhdGEgPSBPYmplY3QuYXNzaWduKHt9LCBkYXRhLCBleHRyYSkNCiAgICAgIGRhdGEucGFnZSA9IHRoaXMucGFnZQ0KICAgICAgLy8gY29uc29sZS5sb2coZGF0YSwgJ2RhdGEnKQ0KICAgICAgDQogICAgICB0aGlzLiRhcGlbdGhpcy5hcGlOYW1lXShkYXRhKS50aGVuKGFzeW5jIHJlcz0+IHsNCiAgICAgICAgdGhpcy5hcGlMb2FkID0gdHJ1ZQ0KICAgICAgICBpZighcmVzIHx8ICFyZXMuc3RhdGUpIHsNCiAgICAgICAgICB0aGlzLmZpbmlzaGVkID0gdHJ1ZQ0KICAgICAgICB9DQogICAgICAgIGlmIChyZXMuc3RhdGUpIHsNCiAgICAgICAgICBsZXQgbGlzdCA9IHJlcy5pbmZvW3RoaXMubGlzdE5hbWVdIHx8IFtdDQogICAgICAgICAgbGV0IHBhZ2VJbmZvID0gcmVzLmluZm9bdGhpcy5wYWdlTmFtZV0gfHwge30NCiAgICAgICAgICBsaXN0ID0gYXdhaXQgdGhpcy5iZWZvcmVTZXRMaXN0KGxpc3QpDQogICAgICAgICAgaWYgKHRoaXMucGFnZSA9PSAxKSB7DQogICAgICAgICAgICB0aGlzLnRvdGFsUGFnZSA9IHBhZ2VJbmZvLnRvdGFsUGFnZSB8fCAxDQogICAgICAgICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZQ0KICAgICAgICAgICAgdGhpcy5maW5pc2hlZCA9IGZhbHNlDQogICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGxpc3QgPSBbLi4udGhpcy5kYXRhTGlzdCwgLi4ubGlzdF0NCiAgICAgICAgICB9DQogICAgICAgICAgaWYgKHRoaXMucGFnZSA+PSB0aGlzLnRvdGFsUGFnZSkgew0KICAgICAgICAgICAgdGhpcy5maW5pc2hlZCA9IHRydWUNCiAgICAgICAgICB9DQogICAgICAgICAgdGhpcy5kYXRhTGlzdCA9IGxpc3QNCiAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6bGlzdCcsIGxpc3QpDQogICAgICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgew0KICAgICAgICAgICAgcGFnZTogdGhpcy5wYWdlLA0KICAgICAgICAgICAgdG90YWxQYWdlOiB0aGlzLnRvdGFsUGFnZSwNCiAgICAgICAgICAgIGZpbmlzaGVkOiB0aGlzLmZpbmlzaGVkDQogICAgICAgICAgfSkNCiAgICAgICAgICB0aGlzLnBhZ2UrKw0KICAgICAgICB9DQogICAgICB9KS5maW5hbGx5KCgpID0+IHsNCiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UNCiAgICAgIH0pDQogICAgfSwNCiAgfSwNCiAgY3JlYXRlZCAoKSB7DQogICAgdGhpcy5hdXRvICYmIHRoaXMuZ2V0TGlzdCgpOw0KICAgIHRoaXMubG9hZGluZyA9IHRydWUNCiAgfQ0KfQ0K"},{"version":3,"sources":["commonList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"commonList.vue","sourceRoot":"src/components/common/common","sourcesContent":["<!--\r\n * @Description: \r\n * @Version: 1.0\r\n * @Autor: yesong\r\n * @Date: 2020-07-29 14:11:44\r\n * @LastEditors: yesong\r\n * @LastEditTime: 2020-08-08 11:53:39\r\n--> \r\n<template>\r\n  <div class=\"common-list\">\r\n    <!-- 开启下拉刷新 -->\r\n    <van-pull-refresh :disabled=\"!dropDown\" v-model=\"refreshing\" @refresh=\"onRefresh\">\r\n      <van-list\r\n        class=\"act-list\"\r\n        v-model=\"loading\"\r\n        :finished=\"finished\"\r\n        :finished-text=\"dataList.length === 0 ? '' : '已经到底了~'\"\r\n        @load=\"getList()\"\r\n        :immediate-check=\"false\"\r\n      >\r\n        <slot v-bind:list=\"dataList\" />\r\n        <div v-if=\"dataList.length === 0 && listLoading\" class=\"tac empty-data\">\r\n          <img src=\"http://doyd.oss-cn-shenzhen.aliyuncs.com/vip_mini_apply/empty_state.png\" alt=\"\">\r\n          <div>暂无数据</div>\r\n        </div>\r\n      </van-list>\r\n    </van-pull-refresh>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'commonList',\r\n  props: {\r\n    beforeSetList: { // 赋值list数据之前\r\n      type: Function,\r\n      default: (list) => {\r\n        return list\r\n      }\r\n    },\r\n    beforeRequest: { // 请求list数据之前\r\n      type: Function,\r\n      default: () => {\r\n        return {}\r\n      }\r\n    },\r\n    auto: { // 列表是否启动页面自执行\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    pageName: {\r\n      type: String,\r\n      default: 'page',\r\n    },\r\n    listName: {\r\n      type: String,\r\n      default: 'actList',\r\n    },\r\n    apiName: { // 请求接口名称\r\n      type: String,\r\n      default: '',\r\n      required: true\r\n    },\r\n    filterData: { // 请求数据\r\n      type: Object\r\n    },\r\n    list: { // 列表数据\r\n      type: Array\r\n    },\r\n    refresh: { // 重置列表\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    dropDown: { // 是否开启上拉刷新\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  watch: {\r\n    // 刷新列表\r\n    refresh(newVal, oldVal) {\r\n      if (newVal) {\r\n      console.log(this.refresh, newVal, 'refresh执行')\r\n        this.page = 1\r\n        this.loading = true;\r\n        this.getList()\r\n        this.$emit('update:refresh', false)\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      loading: false,\r\n      finished: false,\r\n      refreshing: false,\r\n      page: 1,\r\n      dataList: [],\r\n      listLoading: false\r\n    }\r\n  },\r\n  methods: {\r\n    onRefresh() {\r\n      console.log('onRefresh执行')\r\n\r\n      // 重新加载数据\r\n      // 将 loading 设置为 true，表示处于加载状态\r\n      this.page = 1\r\n      this.loading = true;\r\n      this.listLoading = false\r\n      this.getList();\r\n    },\r\n\r\n    // 处理请求数据\r\n    handelList() {\r\n      \r\n    },\r\n\r\n    // 请求列表数据\r\n    async getList(event) {\r\n      this.apiLoad = false\r\n      if(this.apiLoad) return false\r\n      if (this.refreshing) {\r\n        this.dataList = [];\r\n        this.refreshing = false;\r\n        this.listLoading = false\r\n      }\r\n      \r\n      let data = JSON.parse(JSON.stringify(this.filterData))\r\n      let extra =  await this.beforeRequest(data) // 请求之前\r\n      data = Object.assign({}, data, extra)\r\n      data.page = this.page\r\n      // console.log(data, 'data')\r\n      \r\n      this.$api[this.apiName](data).then(async res=> {\r\n        this.apiLoad = true\r\n        if(!res || !res.state) {\r\n          this.finished = true\r\n        }\r\n        if (res.state) {\r\n          let list = res.info[this.listName] || []\r\n          let pageInfo = res.info[this.pageName] || {}\r\n          list = await this.beforeSetList(list)\r\n          if (this.page == 1) {\r\n            this.totalPage = pageInfo.totalPage || 1\r\n            this.listLoading = true\r\n            this.finished = false\r\n          } else {\r\n            list = [...this.dataList, ...list]\r\n          }\r\n          if (this.page >= this.totalPage) {\r\n            this.finished = true\r\n          }\r\n          this.dataList = list\r\n          this.$emit('update:list', list)\r\n          this.$emit('change', {\r\n            page: this.page,\r\n            totalPage: this.totalPage,\r\n            finished: this.finished\r\n          })\r\n          this.page++\r\n        }\r\n      }).finally(() => {\r\n        this.loading = false\r\n      })\r\n    },\r\n  },\r\n  created () {\r\n    this.auto && this.getList();\r\n    this.loading = true\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.empty-data {\r\n  img {\r\n    width: 469px;\r\n    height: 349px;\r\n    margin: 178px auto 40px; \r\n  }\r\n  div {\r\n    font-size: 28px;\r\n    color: #8C8E99;\r\n  }\r\n}\r\n</style>\r\n\r\n\r\n"]}]}