{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\src\\views\\coupon\\couponDetail.vue?vue&type=template&id=0228fd94&scoped=true&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\src\\views\\coupon\\couponDetail.vue","mtime":1597285201075},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}