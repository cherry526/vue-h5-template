{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\src\\views\\active\\giftBag.vue?vue&type=style&index=0&id=6afa47c9&scoped=true&lang=scss&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\src\\views\\active\\giftBag.vue","mtime":1596854692241},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vip_inline_h5\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5naWZ0LXRpdGxlewogIGZvbnQtc2l6ZTogMzJweDsKICBjb2xvcjogIzFBMTkxOTsKICBtYXJnaW4tYm90dG9tOiAzMHB4OwogIG1hcmdpbi1yaWdodDogMTJweDsKfQo="},{"version":3,"sources":["giftBag.vue"],"names":[],"mappingsi8BA;AACA;AACA;AACA;AACA;AACA","file":"giftBag.vue","sourceRoot":"src/views/active","sourcesContent":["<!--\r\n * @Description: 大礼包\r\n * @Version: 1.0\r\n * @Autor: cherry\r\n * @Date: 2020-07-20 15:49:14\r\n * @LastEditors: yesong\r\n * @LastEditTime: 2020-08-07 19:28:49\r\n--> \r\n<template>\r\n  <div>\r\n    <van-skeleton title :row=\"14\" :loading=\"!ready\">\r\n      <common-swiper :imgUrls=\"info.mediaList\" urlName=\"img\"></common-swiper>\r\n      <div class=\"act-container\">\r\n        <active-header  \r\n          :info.sync=\"info\" \r\n          :channelType=\"channelType\" \r\n          :selConsumer=\"selConsumer\" \r\n          :showTime=\"showTime\" \r\n          :remainTime=\"remainTime\" \r\n          :downTime.sync=\"downTime\"\r\n          :btnDisabled=\"btnDisabled\" \r\n          :hasExchange=\"options.hasExchange\">\r\n        </active-header>\r\n        <!-- 现金红包 && 使用规则 -->\r\n        <active-cash id=\"activeCash\" :info=\"info\" :options=\"options\" :actType=\"info.actType\" />\r\n        <!-- 推荐理由 -->\r\n        <active-gift-reason :info=\"info\"></active-gift-reason>\r\n        <!-- 礼包详情 -->\r\n        <active-gift :info=\"info\" :options=\"options\"></active-gift>\r\n        <!-- 活动须知 -->\r\n        <div class=\"active-panel\">\r\n          <div class='gift-title bold' id=\"rule\">活动须知</div>\r\n          <div class=''><span class=\"actRule\">{{info.actRule}}</span></div>\r\n        </div>\r\n        <!-- 礼包介绍 -->\r\n        <active-graphic :detail=\"info.actExplain\" title=\"礼包介绍\"></active-graphic>\r\n        \r\n      </div>\r\n      <!-- 兑换中心进入时 -->\r\n      <div class='active-footer footer1' v-if='options.hasExchange'>\r\n        <img v-if=\"!btnDisabled\" src='http://doyd.oss-cn-shenzhen.aliyuncs.com/vip_mini_apply/v1.0.0/btn_base_pay1.png'>\r\n        <img v-else src='http://doyd.oss-cn-shenzhen.aliyuncs.com/vip_mini_apply/v1.0.0/btn_unclickable_pay1.png'>\r\n        <div class='flex-v poa footer-text'>\r\n          <button class=\"ft34 tac\" :class=\"btnDisabled ? 'cB5' : 'c99' \"  id=\"STATIS_BUY\">{{btnText}}</button>\r\n        </div>\r\n      </div>\r\n      <!-- 正常活动进入 -->\r\n      <div class=\"footer pof\" v-else>\r\n        <active-footer :info=\"info\" :btnText=\"btnText\" :btnDisabled=\"btnDisabled\" :selCashred=\"selCashred\" :selConsumer=\"selConsumer\" @success=\"getGift\"></active-footer>\r\n      </div>\r\n\r\n      <!-- 非会员购买时提示 -->\r\n      <div class='mask flex-c flex-v cAE' v-if=\"showPop\">\r\n        <div class='flex-col flex-c flex-v por mask-box'>\r\n          <text class='pop-til ft36 bold poa'>温馨提示</text>\r\n          <div class='pop-cont ft30 poa tac'>您还不是潮级VIP，开通后本次消费可优惠买单</div>\r\n          <!-- 关闭按钮 -->\r\n          <img src='/images/p_close_icon.png' class='p_close_icon poa' @click='closePop'>\r\n          <img src='http://doyd.oss-cn-shenzhen.aliyuncs.com/vip_mini_apply/pop_buy.png' class='pop_buy'>\r\n          <div class='pop-btn por tac ft36 bold' @click=\"toJoin\">￥{{lowPrice | fixedNum}}去开通</div>\r\n        </div>\r\n      </div>\r\n    </van-skeleton>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\n  import { mapGetters, mapActions, mapMutations } from \"vuex\";\r\n  import seckillMixin from '@/mixins/seckillMixin' \r\n  import activeHeader from '@components/active/activeHeader'\r\n  import activeCash from '@components/active/activeCash'\r\n  import activeGift from '@components/active/activeGift'\r\n  import activeGiftReason from '@components/active/activeGiftReason'\r\n  import activeGraphic from '@components/active/activeGraphic'\r\n  import activeFooter from '@components/active/activeFooter'\r\n  import activeUtils from '@/filters/active.js'\r\n  import orderPay from \"@/utils/pay\"\r\n  import utils from \"@/utils/utils\"\r\n  export default {\r\n    name: 'giftBag',\r\n    mixins: [seckillMixin],\r\n    computed: {\r\n    },\r\n    components: {\r\n      activeHeader,\r\n      activeCash,\r\n      activeGift,\r\n      activeGiftReason,\r\n      activeGraphic,\r\n      activeFooter\r\n    },\r\n    data() {\r\n      return {\r\n        ready: false,\r\n        timer: null,\r\n        limitTimer: null,\r\n        showPop: false,\r\n        btnText: '立即抢购',\r\n        headline: '',\r\n        showTime: true,\r\n        remainTime: 0,\r\n        channelType: '',\r\n        options: this.$route.query || {},\r\n        btnDisabled: false, // 按钮是否不可用\r\n        btnFontSize: 'ft34',\r\n        selCashred: {},\r\n        selConsumer: {},\r\n        conditionInfo: {},\r\n        tracvelUserList: [],\r\n        selDate: {\r\n          startTime: ''\r\n        },\r\n        info: {},\r\n        receiveObj: {\r\n          2: '新用户',\r\n          3: '会员',\r\n          4: '非会员'\r\n        },\r\n        downTime: {\r\n          hour: '00',\r\n          minute: '00',\r\n          second: '00'\r\n        },\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"locationInfo\", \"wxUser\", \"locationCity\", \"vipCardInfo\", \"updateGift\"])\r\n    },\r\n    methods: {\r\n      ...mapMutations('active', [\r\n        'SET_UPDATEGIFT'\r\n      ]),\r\n    // 设置提醒\r\n      remindSet(e) {\r\n\r\n      },\r\n\r\n      handlerLimit(res, flag){\r\n        if (res.info.limitActState == 8 || res.info.limitActState == 9) {\r\n          res.info.timeState = 1\r\n          this.headline = activeUtils.getDayName(res.info.limitStartTime)\r\n        } else if (res.info.limitActState == 1 || res.info.limitActState == 3 || res.info.limitActState == 10) {\r\n          res.info.timeState = 2\r\n        } else if (res.info.limitActState == 2) {\r\n          res.info.timeState = 3\r\n        } else {\r\n          // 1未开始 2进行中 3已结束\r\n          let currentTime = +new Date()\r\n          if((res.info.limitEndTime<currentTime) && (res.info.limitStartTime<currentTime)) {\r\n            res.info.timeState = 3\r\n          } else if ((res.info.limitEndTime>currentTime) && (res.info.limitStartTime<currentTime)){\r\n            res.info.timeState = 2\r\n          } else if (res.info.limitStartTime>currentTime) {\r\n            res.info.timeState = 1\r\n            this.headline = activeUtils.getDayName(res.info.limitStartTime)\r\n          }\r\n        }\r\n        if(res.info.timeState != 3) {\r\n          clearInterval(this.limitTimer)\r\n          this.limitTimer = setInterval(() => {\r\n            let nowTime = +new Date()\r\n            var cutTime = 0\r\n            if(res.info.timeState == 1) {\r\n              cutTime = res.info.limitStartTime - nowTime\r\n            } else { \r\n              cutTime = res.info.limitEndTime - nowTime\r\n            }\r\n            this.downTime = utils.countDown3(cutTime)\r\n            if(cutTime <= 0 && (res.info.limitActState != 12)){\r\n              clearInterval(this.limitTimer)\r\n              this.getActDetail()\r\n            }\r\n          }, 1000)\r\n        } else {\r\n          this.downTime = {\r\n            hour: '00',\r\n            minute: '00',\r\n            second: '00'\r\n          }\r\n        }\r\n        console.log('res...........', res.info, this.downTime)\r\n\r\n        if(flag) {\r\n          // 已抢完活动弹窗\r\n          if(res.info.limitActState == 3 || res.info.limitActState == 2 || !this.info.remainNum) {\r\n            this.getEndActive()\r\n          }\r\n        }\r\n      },\r\n      // 。。。。。。。。。。。。。。。。。。。。。优化结束。。。。。。。。。。。。。。\r\n\r\n      closePop() {\r\n        this.showPop = false\r\n      },\r\n\r\n      // 礼包特有信息\r\n      getGiftInfo() {\r\n        return this.$api.act_gift_info({\r\n          channelType: this.channelType,\r\n          qrCode: this.qrCode,\r\n          actSn: this.actSn,\r\n          lat: this.locationInfo.latitude,\r\n          lng: this.locationInfo.longitude\r\n        }).then(res => {\r\n          if (res.state) {\r\n            let cardSum = 0\r\n            res.info.cardList.forEach((item) => {\r\n              cardSum += item.cardNum\r\n            })\r\n            this.info = Object.assign({ cardSum }, this.info, res.info)\r\n            if (res.info.remainNum == 0) {\r\n              this.handlerBtn('已售罄', true)\r\n            }\r\n            \r\n          }\r\n        })\r\n      },\r\n\r\n      handlerBtn(text, disabled=false, fontSize='ft34') {\r\n        this.btnText = text\r\n        this.btnFontSize = fontSize\r\n        this.btnDisabled = disabled\r\n        if (disabled) {\r\n          this.showTime = false\r\n        }\r\n      },\r\n\r\n      // 判断用户购买信息\r\n      getRealTimeInfo(limitFrequency) {\r\n        return this.$api.realTime_info({\r\n          actSn: this.actSn\r\n        }).then(res => {\r\n          if (res.state) {\r\n            this.realInfo = res.info\r\n          }\r\n        })\r\n      },\r\n      getReceiveCondition () {\r\n        return this.$api.receive_condition({\r\n          actSn: this.actSn\r\n        }).then(res=> {\r\n          if (res.state) {\r\n            this.conditionInfo = res.info\r\n          }\r\n        })\r\n      },\r\n      // 处理立即领取的按钮\r\n      handlerReceiveBtn() {\r\n        let hasReceiveChannelFreeGift = this.info.hasReceiveChannelFreeGift\r\n        let channelType = this.channelType\r\n        this.handlerBtn('立即领取')\r\n        if (hasReceiveChannelFreeGift && channelType == 'CHANNEL_ACTIVITY_LABEL_SHOW') this.handlerBtn('领取次数已用完', true)\r\n      },\r\n\r\n      // 通用活动详情\r\n      getActDetail(flag) {\r\n        this.$Toast.loading({\r\n          message: '加载中...',\r\n          forbidClick: true,\r\n          duration: 0\r\n        })\r\n        return this.$api.act_detail({\r\n          channelType: this.channelType,\r\n          qrCode: this.qrCode,\r\n          actSn: this.actSn\r\n        }).then(async res => {\r\n          if (res.state) {\r\n            this.enumKey = res.info.childEnumKey\r\n            this.showShare = true\r\n\r\n            // 处理限时的倒计时等问题 \r\n            if ( res.info.childEnumKey == 'ACT_GIFT_PACKAGE_PURCHASE_LIMIT') {\r\n              this.handlerLimit(res, flag)\r\n            }\r\n            res.info.channelType = this.channelType || ''\r\n            this.info = Object.assign({}, this.info, res.info)\r\n            this.remainTime = res.info.remainTime\r\n            this.showTime = res.info.showTime\r\n            this.ready = true\r\n\r\n            console.log('info..........', this.info)\r\n\r\n            // 按钮文字\r\n            let vipUser = this.vipCardInfo.vipUser\r\n            this.vipUser = this.vipCardInfo.vipUser\r\n            let channelType = this.channelType\r\n            let restrictState = this.info.restrictState\r\n            let packageGiftType = this.info.packageGiftType\r\n            let hasReceiveChannelFreeGift = this.info.hasReceiveChannelFreeGift\r\n            let remainNum = this.info.remainNum\r\n            let channelTrack = this.info.channelTrack\r\n            let sellPrice = this.info.sellPrice\r\n            let noVipPrice = this.info.noVipPrice\r\n            let state = res.info.actState\r\n            let buyLimit = res.info.buyLimit\r\n\r\n            if (state == 1) {\r\n              this.handlerBtn('未开始', true)\r\n            } else if (state == 3) {\r\n              this.handlerBtn('已售罄', true)\r\n            } else if (state == 4) {\r\n              this.handlerBtn('已结束', true)\r\n            } else if (state == 5) {\r\n              //  会员\r\n              if(vipUser){\r\n                if (sellPrice > 0){\r\n                  this.handlerBtn('已售罄', true)\r\n                } else {\r\n                  this.handlerBtn('领取次数已用完', true)\r\n                }\r\n              }else{\r\n                if (buyLimit == 1 && noVipPrice > 0) {\r\n                  this.handlerBtn('已售罄', true)\r\n                } else if (buyLimit == 1 && noVipPrice == 0) {\r\n                  this.handlerBtn('领取次数已用完', true)\r\n                } else if (buyLimit == 2) {\r\n                  this.handlerBtn('已售罄', true)\r\n                }\r\n              }\r\n            }\r\n            // 外部渠道进入\r\n            if (state == 2) {\r\n              \r\n              // ..............外部渠道礼包为售卖型....................\r\n              if (channelTrack ? packageGiftType == 1 : restrictState == 2) {\r\n                if (remainNum > 0) {\r\n                  this.handlerBtn('立即购买')\r\n                } else {\r\n                  //  会员\r\n                  if (vipUser) {\r\n                    if (sellPrice > 0) {\r\n                      this.handlerBtn('已售罄', true)\r\n                    } else {\r\n                      this.handlerBtn('领取次数已用完', true)\r\n                    }\r\n                  } else {\r\n                    if (buyLimit == 1 && noVipPrice > 0) {\r\n                      this.handlerBtn('已售罄', true)\r\n                    } else if (buyLimit == 1 && noVipPrice == 0) {\r\n                      this.handlerBtn('领取次数已用完', true)\r\n                    } else if (buyLimit == 2) {\r\n                      this.handlerBtn('已售罄', true)\r\n                    }\r\n                  }\r\n                }\r\n\r\n                // 仅会员可购买时，非会员显示\r\n                if (buyLimit == 2 && !vipUser) {\r\n                  this.handlerBtn('开通并购买')\r\n                }\r\n\r\n                // 仅会员可购买，会员价为0，非会员视角\r\n                if (buyLimit == 2 && !sellPrice && !vipUser) {\r\n                  this.open_receive = true\r\n                  this.handlerBtn('开通并领取')\r\n                  \r\n                }\r\n\r\n                //.................立即领取的按钮开始...................\r\n                // 仅会员可购买，会员价为0，会员视角\r\n                if (buyLimit == 2 && !sellPrice && vipUser) {\r\n                  this.handlerReceiveBtn(state)\r\n                }\r\n\r\n                // 所有人可购买，会员价、非会员价都为0，所有人视角\r\n                if (buyLimit == 1 && !sellPrice && !noVipPrice) {\r\n                  this.handlerReceiveBtn(state)\r\n                }\r\n                \r\n                // 所有人可购买，会员价、非会员价都为0，所有人视角\r\n                if (buyLimit == 1 && !sellPrice && !noVipPrice) {\r\n                  this.handlerReceiveBtn(state)\r\n                }\r\n                \r\n                // 所有人可购买，会员价、非会员价都为0，所有人视角\r\n                if (buyLimit == 1 && !sellPrice && vipUser) {\r\n                  this.handlerReceiveBtn(state)\r\n                }\r\n                //.................立即领取的按钮结束...................\r\n\r\n              } else if (channelTrack ? packageGiftType == 2 : restrictState == 1) {\r\n                \r\n                // ..............外部渠道礼包为免费领取型................\r\n                if (remainNum > 0) {\r\n                  this.handlerBtn('立即领取')\r\n                } else {\r\n                  this.handlerBtn('已售罄', true)\r\n                }\r\n                if (hasReceiveChannelFreeGift && channelType == 'CHANNEL_ACTIVITY_LABEL_SHOW') {\r\n                  this.handlerBtn('领取次数已用完', true)\r\n                }\r\n              }\r\n\r\n\r\n              //....................领取次数与购买次数是否已用完................ \r\n              let totalNum = Number(this.realInfo.userBuyNum) + Number(this.realInfo.userFreeReceiveNum) // 当前用户的购买数量和领取数量总和\r\n              let contation = (res.info.buyLimit == 1 && !res.info.sellPrice && !res.info.noVipPrice) || (res.info.buyLimit == 2 && !res.info.sellPrice) // 判断已领取的状态\r\n\r\n              // 判断是否限制购买\r\n              if (res.info.limitState) {\r\n                if (totalNum >= res.info.limitFrequency) {\r\n\r\n                  // 用户总成功购买数量大于限制购买数量\r\n                  this.handlerBtn('已购买', true)\r\n                }\r\n                if ((totalNum >= res.info.limitFrequency) && contation) {\r\n\r\n                  // 当前用户当前活动中总免费领取数量大于限制领取数量\r\n                  this.handlerBtn('领取次数已用完', true)\r\n                }\r\n              }\r\n            } \r\n            // 判断为兑换中心进入\r\n            if (this.hasExchange != '') { \r\n              let exchange_data = this.exchange_data // 兑换中心活动数据\r\n\r\n              if (exchange_data.hasExchange) {\r\n                this.handlerBtn('已兑换', true)\r\n              } else {\r\n                if (exchange_data.remainNum > 0) {\r\n                  if (exchange_data.state != 2) {\r\n                    this.handlerBtn('已结束', true)\r\n                  } else {\r\n                    if (exchange_data.condition) {                                                                   \r\n                      this.handlerBtn('立即兑换', false)\r\n                    } else {\r\n                      this.handlerBtn('立即兑换', true)\r\n                    }\r\n                  }\r\n                } else {\r\n                  this.handlerBtn('已兑完', true)\r\n                }\r\n              }\r\n            }\r\n\r\n            // .................优化新增............................\r\n            // 判断从限购进入\r\n            if (this.info.childEnumKey == 'ACT_GIFT_PACKAGE_PURCHASE_LIMIT') {\r\n              // 判断按钮的展示\r\n              // 1.活动未开始 未设置提醒 ----- 提醒我/预约提醒 \r\n              // 2.活动未开始 已设置提醒 ----- 已预约\r\n              // 3.活动进行中 ----- 立即抢购\r\n              // 4.活动进行中 购买次数达到上限----- 已购买\r\n              // 5.活动进行中 库存为0 ----- 已抢完\r\n              // 6.活动未发布 无法购买、设置提醒 ----- 若点击，则toast提示“当前活动/合辑未发布”\r\n              // 7.活动已结束 -----  已抢完\r\n              if (!this.info.remainNum) {\r\n                this.handlerBtn('已抢完', true)\r\n                return\r\n              }\r\n              if(res.info.actState == 11  || res.info.actState == 3) {\r\n                this.handlerBtn('已抢完', true)\r\n              } else {\r\n                // if (res.info.limitActState == 8) {\r\n                //   this.handlerBtn('预约提醒', false)\r\n                // } else if (res.info.limitActState == 9) {\r\n                //   this.handlerBtn('已预约', false)\r\n                // } \r\n                if (res.info.limitActState == 8 || res.info.limitActState == 9) {\r\n                  this.handlerBtn('未开始', true)\r\n                } else if (res.info.limitActState == 1) {\r\n                  this.handlerBtn('立即抢购', false)\r\n                } else if (res.info.limitActState == 10) {\r\n                  this.handlerBtn('已购买', true)\r\n                } else if (res.info.limitActState == 3) {\r\n                  this.handlerBtn('已抢完', true)\r\n                } else if (res.info.limitActState == 2) {\r\n                  this.handlerBtn('已抢完', true)\r\n                }\r\n              }\r\n            }\r\n\r\n            this.showBtnTxt = true\r\n          \r\n            // 如果需要显示倒计时\r\n            if (this.showTime && this.info.childEnumKey != 'ACT_GIFT_PACKAGE_PURCHASE_LIMIT') {\r\n              clearInterval(this.timer)\r\n              var remainTime = res.info.remainTime\r\n\r\n              this.timer = setInterval(() => {\r\n                if (remainTime >= 1000) {\r\n                  remainTime -= 1000\r\n                } else {\r\n                  clearInterval(this.timer)\r\n                }\r\n                this.remainTime = remainTime || 0\r\n              }, 1000)\r\n            }\r\n\r\n            this.getCashNum() // 获取活动红包当前享用最大红包\r\n          } else {\r\n            this.back_to(res)\r\n          }\r\n        }).finally(() => {\r\n          this.$Toast.clear()\r\n        })\r\n      },\r\n\r\n      // 领取礼包接口调用\r\n      // receiveType 获取方式，1会员领取，2会员购买，3渠道购买\r\n      receiveGift(receiveType=1) {\r\n        let conditionInfo = this.conditionInfo\r\n        let tracvelUserList = this.tracvelUserList\r\n        if (conditionInfo.isCondition && tracvelUserList.length == 0) {\r\n          // 判断是否需求填写信息\r\n          this.$router.push({\r\n            name: 'travelInformation',\r\n            query: {\r\n              actSn: this.options.actSn\r\n            }\r\n          })\r\n          return\r\n        }\r\n        let actDeal = orderPay.actDeal({\r\n          cityId: this.locationCity.cityId,\r\n          actSn: this.actSn,\r\n          dealNum: 1,\r\n          channelType: this.channelType,\r\n          realFee: 0,\r\n          receiveType,\r\n          openVip: false, //是否开通月卡会员并购买\r\n          actFee: 0, //活动支付费用\r\n          vipFee: 0,\r\n          vipCardId: '',\r\n          buyType: 0,\r\n          qrCode: this.qrCode,\r\n          compId: this.compId, // 合辑Id\r\n          chooseDate: this.selDate.startTime ? utils.formatTime(this.selDate.startTime || 0, 'YYYYMMDD') : 0, // 自我游选择时间\r\n          tracvelUserList: JSON.stringify(this.tracvelUserList)\r\n        })\r\n        if (actDeal) {\r\n          actDeal.then(res => {\r\n            if (res.state) {\r\n              // 改变全局能否免费领取礼包的状态\r\n              this.SET_UPDATEGIFT(true)\r\n              // 清除用户填写信息\r\n              this.$save.remove('session', 'travelInformation')\r\n              this.$router.push({name: 'giftBagSuccess', query: { tradeId: res.info.tradeId, actName: this.info.actName, receive: 1, actSn: this.actSn}})\r\n\r\n              // 跳转领取成功页\r\n              // wx.navigateTo({\r\n              //   url: `/pages/activity/gift_bag_detail/success/success?tradeId=${res.info.tradeId}&actName=${this.info.actName}&receive=1&actSn=${this.actSn}`,\r\n              //   success: (result)=>{\r\n              //     this.setData({\r\n              //       isCanClick: false \r\n              //     })\r\n              //   }\r\n              // });\r\n            }\r\n          })\r\n        }\r\n      },\r\n\r\n      // 判断是否有未支付的订单\r\n      // receiveType 获取方式，1会员领取，2会员购买，3渠道购买\r\n      orderUnpay(receiveType) {\r\n        this.$save.set('session', 'orderInfo', this.info)\r\n        console.log('this.info', this.info)\r\n        if (this.isCanClick2) return \r\n        this.isCanClick2 = true \r\n        this.$api.order_unpay({\r\n          actSn: this.actSn\r\n        }).then(res => {\r\n          if (res.state) {\r\n            if (res.info.existsUnPay) {\r\n              // 如果存在未支付的订单，跳转到订单列表页\r\n              this.$router.push({\r\n                name: 'orderList'\r\n              })\r\n            } else {\r\n              this.jumpSubmit(receiveType)\r\n              this.isCanClick2 = false\r\n            }\r\n          }\r\n        }).catch(() => {\r\n          this.isCanClick2 = false \r\n        })\r\n      },\r\n\r\n      // 跳转购买页面\r\n      jumpSubmit(receiveType) {\r\n        this.$router.push({\r\n          name: 'submitOrder',\r\n          query: {\r\n            qrCode: this.options.qrCode || '',\r\n            compId: this.options.compId || '',\r\n            actSn: this.options.actSn,\r\n            channelType: this.options.channelType,\r\n            receiveType: receiveType,\r\n          }\r\n        })\r\n        \r\n      },\r\n\r\n      // 非会员开通并领取\r\n      openReceive() {\r\n        this.$set(this.info, 'sellPrice', 0)\r\n        this.$set(this.info, 'noVipPrice', 0)\r\n        this.$save.set('session', 'orderInfo', this.info)\r\n        // 非会员开通并领取\r\n        let receiveType = this.channelType == 'CHANNEL_ACTIVITY_LABEL_SHOW' ? 4 : 1\r\n        this.jumpSubmit(receiveType)\r\n      },\r\n\r\n      handlerLimitEvent() {\r\n        if( this.info.limitActState == 12 ) {\r\n          this.$Toast('当前合辑非进行中状态')\r\n        } else {\r\n          if(this.btnText == '立即抢购') {\r\n            this.$save.set('session', 'orderInfo', this.info)\r\n            this.jumpSubmit(2)\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n      * 领取或者抢购礼包\r\n          restrictState  是否可购买：1否 2是\r\n          receiveType: 外部渠道{\r\n            购买： 3\r\n            免费领:  1\r\n          }\r\n      */\r\n      getGift() {\r\n        var vipUser = this.vipCardInfo.vipUser\r\n        var isnewUser = this.realInfo.newUser\r\n        let packageGiftType = this.info.packageGiftType // 1售卖 2免费领\r\n        let freeReceiveType = this.info.freeReceiveType // 1所有人可领取 2仅限新用户 3仅限会员 4仅限非会员\r\n        let restrictState = this.info.restrictState\r\n        let channelTrack = this.info.channelTrack // 通过这个字段，判断用packageGiftType还是restrictState字段\r\n        var jumpSate = false // 用来判断是否提示仅限某用户领取\r\n        if (freeReceiveType == 1) {\r\n          // 所有人可领取\r\n          jumpSate = true\r\n        } else if (freeReceiveType == 2 && isnewUser) {\r\n          // 判断用户是否为新用户\r\n          jumpSate = true\r\n        } else if (freeReceiveType == 3 && vipUser) {\r\n          // 判断是否仅会员领取\r\n          jumpSate = true\r\n        } else if (freeReceiveType == 4 && !vipUser) {\r\n          // 判断是否仅非会员领取\r\n          jumpSate = true\r\n        }\r\n\r\n        // 如果是开通并领取\r\n        if (this.open_receive) {\r\n          this.$set(this.info, 'sellPrice', 0)\r\n          this.$set(this.info, 'noVipPrice', 0)\r\n        }\r\n\r\n        this.$save.set('session', 'orderInfo', this.info)\r\n        if (this.hasExchange != '') {\r\n          // 判断兑奖中心进入 立即兑换\r\n          let conditionInfo = this.conditionInfo\r\n          let tracvelUserList = this.tracvelUserList\r\n          if (conditionInfo.isCondition && tracvelUserList.length == 0) {\r\n            // 判断是否需求填写信息\r\n            this.$router.push({\r\n              name: 'travelInformation',\r\n              query: {\r\n                actSn: this.options.actSn\r\n              }\r\n            })\r\n            return\r\n          }\r\n          if (!this.btnDisabled) this.exchange()\r\n        } else if (this.info.childEnumKey == 'ACT_GIFT_PACKAGE_PURCHASE_LIMIT') {\r\n          this.handlerLimitEvent()\r\n        } else if (this.info.actState == 2) {\r\n          // 判断是否是从外部渠道进入，外部渠道进入时，如果配置用户可购买，非会员也可购买礼包\r\n          let buyLimit = this.info.buyLimit\r\n          let sellPrice = this.info.sellPrice\r\n          let noVipPrice = this.info.noVipPrice\r\n          let buyState = false;\r\n          //  所有人   会 0   非 0\r\n          if (buyLimit == 1 && noVipPrice == 0 && sellPrice == 0){\r\n            buyState = false;\r\n          //  会员身份\r\n          } else if (vipUser && sellPrice > 0){\r\n            buyState = true\r\n          } else if (!vipUser){\r\n            buyState = buyLimit == 2 ? true : noVipPrice > 0 \r\n          }\r\n\r\n          if (channelTrack ? packageGiftType == 1 : restrictState == 2) {\r\n\r\n            if(buyState){\r\n              // 购买礼包\r\n\r\n              // 如果是外部渠道并且是领取状态，receiveType为4，购买状态receiveType为2\r\n              let receiveType = this.channelType == 'CHANNEL_ACTIVITY_LABEL_SHOW' && this.open_receive ? 4 : 2\r\n              if (buyLimit == 2 && sellPrice == 0) {\r\n                receiveType = 1\r\n              }\r\n              this.orderUnpay(receiveType)    \r\n            } else {\r\n              // 使用字段restrictState判断\r\n              this.receiveGift(4)\r\n            }\r\n\r\n          } else if (channelTrack ? packageGiftType == 2 : restrictState == 1) {\r\n            // 免费领\r\n            if (channelTrack) {\r\n\r\n              // 使用字段packageGiftType判断\r\n              if (freeReceiveType != 1 && !jumpSate) {\r\n                this.$Toast(`仅限${this.receiveObj[freeReceiveType]}领取`)\r\n              } else {\r\n                this.receiveGift(4)\r\n              }\r\n            } else {\r\n\r\n              // 使用字段restrictState判断\r\n              this.receiveGift(4)\r\n            }\r\n            \r\n          }\r\n        }\r\n      },\r\n\r\n      // 兑换\r\n      exchange () {\r\n        let item = this.exchange_data\r\n        this.$dialog.confirm({\r\n          title: `是否确认兑换${item.actName || ''}?`,\r\n          message:'兑换后不可更改且原有潮卡将会清空',\r\n        }).then(()=>{\r\n          this.priceExchange(item)\r\n        }).catch(() => {\r\n              // on cancel\r\n        });\r\n      },\r\n\r\n      // 开始兑换\r\n      priceExchange (item) {\r\n        if (this.canClick) return\r\n        this.canClick = true\r\n        this.$api.price_exchange({\r\n          actSn: item.actSn,\r\n          awardId: item.awardId,\r\n          cityId: this.locationCity.cityId,\r\n          chooseDate: this.selDate.startTime ? utils.formatTime(this.selDate.startTime || 0, 'YYYYMMDD') : 0, // 自我游选择时间\r\n          tracvelUserList: JSON.stringify(this.tracvelUserList)\r\n        }).then(res => {\r\n          if (res.state) {\r\n            this.mask = true\r\n            this.handlerBtn('已兑换', true)\r\n            // 清除用户填写信息\r\n            this.$save.remove('session', 'travelInformation')\r\n          } else {\r\n            this.$Toast(res.message)\r\n          }\r\n        }).finally(()=>{\r\n          setTimeout(()=>{\r\n            this.canClick = false\r\n          }, 300)\r\n        })\r\n      },\r\n\r\n      goCard() {\r\n        this.$router.push({\r\n          name: 'couponList'\r\n        })\r\n      },\r\n\r\n      close() {\r\n        this.mask = false\r\n      },\r\n\r\n      // 获取会员卡最低价格\r\n      vipPrice() {\r\n        this.$api.low_price({}).then(res => {\r\n          if (res.state) {\r\n            this.lowPrice = res.info.lowPrice\r\n          }\r\n        })\r\n      },\r\n      \r\n      showOrderTip() {\r\n        this.$dialog.alert({\r\n          title: '提示',\r\n          message: '订单超时已取消，请重新下单',\r\n          confirmButtonText: '确定',\r\n          confirmButtonColor: '#D90634'\r\n        })\r\n      },\r\n      \r\n      toJoin() {\r\n        this.$router.push({\r\n          name:'joinVip',\r\n          query: {\r\n            channelType: this.channelType\r\n          }\r\n        })\r\n      },\r\n\r\n      // 关闭红包列表\r\n      colsecashMask() {\r\n        this.cashMask = !this.cashMask\r\n      },\r\n\r\n      // 获取活动红包当前享用最大红包\r\n      getCashNum() {\r\n        let vip_check = (!this.vipUser && this.info.buyLimit == 2) ? true : false\r\n        let price = (this.info.buyLimit == 2 || this.vipUser) ? this.info.sellPrice : this.info.noVipPrice\r\n        this.$api.cash_red_list({\r\n          actSn: this.actSn,\r\n          cityId: this.locationCity.cityId,\r\n          openVip: vip_check, // 是否勾选会员卡\r\n          vipFee: vip_check ? this.lowPrice : 0, // 会员卡金额\r\n          actFee: price, // 活动金额\r\n          cardId: \"\", // 特卖卡券id || 礼包传空\r\n        }).then(res => {\r\n          if (res.state) {\r\n            let redList = res.info.cashRedList || []\r\n            let consumerCouponList = res.info.consumerCouponList || []\r\n            let usableList = redList.filter((item) => item.currentAbleUse) // 过滤可用红包\r\n            let sortUsableList = usableList.sort(function(a, b) { // 降序排序\r\n              return b.money - a.money\r\n            })\r\n            this.selCashred = sortUsableList[0] || {} // 选中最大红包\r\n            if (consumerCouponList.length) {\r\n              this.selConsumer = consumerCouponList[0] || {} // 选中消费券\r\n            }  \r\n          }\r\n        }).finally(()=> {\r\n        })\r\n      },\r\n\r\n      hasCachRedList ({ detail }) {\r\n        if (detail && detail.length > 0) {\r\n          // 重新请求红包接口\r\n          this.selectComponent('#activeCash').getCashList()\r\n          this.getCashNum()\r\n        } else {\r\n          this.showPageModel = true\r\n        }\r\n      },\r\n      /**\r\n       * 领取或者抢购礼包\r\n          restrictState  是否可购买：1否 2是\r\n          receiveType: 外部渠道{\r\n            购买： 3\r\n            免费领:  1\r\n          }\r\n      */\r\n      getGift() {\r\n        var vipUser =this.vipCardInfo.vipUser\r\n        var isnewUser = this.realInfo.newUser\r\n        let packageGiftType = this.info.packageGiftType // 1售卖 2免费领\r\n        let freeReceiveType = this.info.freeReceiveType // 1所有人可领取 2仅限新用户 3仅限会员 4仅限非会员\r\n        let restrictState = this.info.restrictState\r\n        let channelTrack = this.info.channelTrack // 通过这个字段，判断用packageGiftType还是restrictState字段\r\n        var jumpSate = false // 用来判断是否提示仅限某用户领取\r\n        if (freeReceiveType == 1) {\r\n          // 所有人可领取\r\n          jumpSate = true\r\n        } else if (freeReceiveType == 2 && isnewUser) {\r\n          // 判断用户是否为新用户\r\n          jumpSate = true\r\n        } else if (freeReceiveType == 3 && vipUser) {\r\n          // 判断是否仅会员领取\r\n          jumpSate = true\r\n        } else if (freeReceiveType == 4 && !vipUser) {\r\n          // 判断是否仅非会员领取\r\n          jumpSate = true\r\n        }\r\n\r\n        // 如果是开通并领取\r\n        if (this.open_receive) {\r\n          this.$set(this.info, 'sellPrice', 0)\r\n          this.$set(this.info, 'noVipPrice', 0)\r\n        }\r\n\r\n        this.$save.set('session', 'orderInfo', this.info)\r\n        if (this.hasExchange != '') {\r\n          // 判断兑奖中心进入 立即兑换\r\n          let conditionInfo = this.conditionInfo\r\n          let tracvelUserList = this.tracvelUserList\r\n          if (conditionInfo.isCondition && tracvelUserList.length == 0) {\r\n            // 判断是否需求填写信息\r\n            this.$router.push({\r\n              name: 'travelInformation',\r\n              query: {\r\n                actSn: this.options.actSn\r\n              }\r\n            })\r\n            return\r\n          }\r\n          if (!this.btnDisabled) this.exchange()\r\n        } else if (this.info.childEnumKey == 'ACT_GIFT_PACKAGE_PURCHASE_LIMIT') {\r\n          this.handlerLimitEvent()\r\n        } else if (this.info.actState == 2) {\r\n          // 判断是否是从外部渠道进入，外部渠道进入时，如果配置用户可购买，非会员也可购买礼包\r\n          let buyLimit = this.info.buyLimit\r\n          let sellPrice = this.info.sellPrice\r\n          let noVipPrice = this.info.noVipPrice\r\n          let buyState = false;\r\n          //  所有人   会 0   非 0\r\n          if (buyLimit == 1 && noVipPrice == 0 && sellPrice == 0){\r\n            buyState = false;\r\n          //  会员身份\r\n          } else if (vipUser && sellPrice > 0){\r\n            buyState = true\r\n          } else if (!vipUser){\r\n            buyState = buyLimit == 2 ? true : noVipPrice > 0 \r\n          }\r\n          if (channelTrack ? packageGiftType == 1 : restrictState == 2) {\r\n            if(buyState){\r\n              // 购买礼包\r\n              // 如果是外部渠道并且是领取状态，receiveType为4，购买状态receiveType为2\r\n              let receiveType = this.channelType == 'CHANNEL_ACTIVITY_LABEL_SHOW' && this.open_receive ? 4 : 2\r\n              if (buyLimit == 2 && sellPrice == 0) {\r\n                receiveType = 1\r\n              }\r\n              this.orderUnpay(receiveType)    \r\n            } else {\r\n              // 使用字段restrictState判断\r\n              this.receiveGift(4)\r\n            }\r\n          } else if (channelTrack ? packageGiftType == 2 : restrictState == 1) {\r\n            // 免费领\r\n            if (channelTrack) {\r\n              // 使用字段packageGiftType判断\r\n              if (freeReceiveType != 1 && !jumpSate) {\r\n                this.$Toast(`仅限${this.receiveObj[freeReceiveType]}领取`)\r\n              } else {\r\n                this.receiveGift(4)\r\n              }\r\n            } else {\r\n              // 使用字段restrictState判断\r\n              this.receiveGift(4)\r\n            }\r\n            \r\n          }\r\n        }\r\n      },\r\n    },\r\n    async created() {\r\n      this.options = this.$route.query\r\n      this.actSn =  this.options.actSn\r\n      this.qrCode =  this.options.qrCode || ''\r\n      this.channelType =  this.options.channelType || ''\r\n      this.compId =  this.options.compId || ''\r\n      this.hasExchange =  this.options.hasExchange || ''\r\n      await this.getRealTimeInfo()\r\n      if (this.options.popup) {\r\n        this.showOrderTip()\r\n      }\r\n      if (this.hasExchange != \"\") { // 判断为兑换中心进入\r\n        this.exchange_data = this.$save.get('session', 'exchange_data')// 兑换中心活动数据\r\n      }\r\n      this.getReceiveCondition() // 是否需要填写用户信息及其条件\r\n      this.vipPrice()\r\n      await this.getGiftInfo()\r\n      await this.getActDetail(true)\r\n    }\r\n  }\r\n</script>\r\n<style scoped lang='scss'>\r\n  .gift-title{\r\n    font-size: 32px;\r\n    color: #1A1919;\r\n    margin-bottom: 30px;\r\n    margin-right: 12px;\r\n  }\r\n</style>"]}]}